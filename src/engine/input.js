// src/engine/input.js
// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–≤–æ–¥–∞

import { debug } from './debugger.js';

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∞–≤–∏—à
export const keys = {
  w: false,
  a: false,
  s: false,
  d: false,
  arrowup: false,
  arrowdown: false,
  arrowleft: false,
  arrowright: false
};

// –ü–æ–∑–∏—Ü–∏—è –º—ã—à–∏ –≤ –º–∏—Ä–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
export const mouse = { x: 0, y: 0 };

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–≤–æ–¥–∞
 */
export function setupInput(canvas) {
  debug("üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–≤–æ–¥–∞");
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à
  document.addEventListener('keydown', function(e) {
    const key = e.key.toLowerCase();
    keys[key] = true;
    debug(`–ö–ª–∞–≤–∏—à–∞ –Ω–∞–∂–∞—Ç–∞: ${key}`);
    
    // Tab –¥–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    if (key === 'tab') {
      e.preventDefault();
      window.gameState.showInventory = !window.gameState.showInventory;
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –∫–ª–∞–≤–∏—à
  document.addEventListener('keyup', function(e) {
    const key = e.key.toLowerCase();
    keys[key] = false;
    debug(`–ö–ª–∞–≤–∏—à–∞ –æ—Ç–ø—É—â–µ–Ω–∞: ${key}`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ canvas
  if (!canvas) {
    debug("‚ùå Canvas –Ω–µ –Ω–∞–π–¥–µ–Ω!", "error");
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏
  canvas.addEventListener('mousemove', function(e) {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏—é canvas
    const rect = canvas.getBoundingClientRect();
    
    // –ü–æ–∑–∏—Ü–∏—è –º—ã—à–∏ –Ω–∞ canvas —Å —É—á–µ—Ç–æ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    const canvasX = (e.clientX - rect.left) * (canvas.width / rect.width);
    const canvasY = (e.clientY - rect.top) * (canvas.height / rect.height);
    
    // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (window.player) {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∏—Ä–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (—Å —É—á–µ—Ç–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã)
      const cameraOffsetX = window.player.x - canvas.width / 2;
      const cameraOffsetY = window.player.y - canvas.height / 2;
      
      mouse.x = canvasX + cameraOffsetX;
      mouse.y = canvasY + cameraOffsetY;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∑–≥–ª—è–¥–∞)
      window.player.angle = Math.atan2(mouse.y - window.player.y, mouse.x - window.player.x);
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫–ª–∞–≤–∏—à–∏
  window.addEventListener('blur', function() {
    for (const key in keys) {
      keys[key] = false;
    }
    debug("–°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞–≤–∏—à (–ø–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞)");
  });
  
  debug("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≤–≤–æ–¥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
}